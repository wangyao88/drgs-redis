<!DOCTYPE etl SYSTEM "http://scriptella.javaforge.com/dtd/etl.dtd">
<etl>
    <properties>
        <include href="./etl.properties"/>
    </properties>
    <!-- drgs数据库连接 -->
    <connection id="drgConnection" url="${drgConnection.url}" driver="${drgConnection.driver}" user="${drgConnection.user}" password="${drgConnection.password}">
        autocommit=true
    </connection>
    <connection id="log" driver="text" lazy-init="true">
        format.FROMDATE.type=date
        format.FROMDATE.pattern=yyyy-MM-dd
        format.TODATE.type=date
        format.TODATE.pattern=yyyy-MM-dd
    </connection>
    <connection id="jexl" driver="jexl"/>
    <!-- 定义全局变量 -->
    <script connection-id="jexl">
        etl.globals['group_no']=etl.getDate().now("yyyyMMddHHmmssSSS");
    </script>

    <query connection-id="drgConnection">
        <!--select beging_date,end_date,nvl(to_date('${DATE}','yyyy-mm-dd'),trunc(sysdate-1)) p_begin_date,trunc(sysdate) p_end_date from tb_init_parameter;-->
        select beging_date,
        end_date+1 as end_date,
        nvl(to_date('${DATE}', 'yyyy-mm-dd'),trunc(sysdate - 1)) p_begin_date,
        nvl(to_date('${DATE}', 'yyyy-mm-dd')+1,trunc(sysdate))  p_end_date
        from tb_init_parameter;
        <query>
            SELECT COUNT(1) NUM
            FROM COMM.TD_SM_BILL_SS L
            INNER JOIN COMM.TD_MR_MEDICAL ML
            ON L.ADMISSION_NUMBER = ML.ADMISSION_NO
            AND L.HOSPITAL_ID = ML.HOSPTIAL_ID
            WHERE L.UNUSUAL_FLAG = '0'
            AND ML.IS_UPLOAD = 1 --已上传数据
            AND ML.IS_VALID = 0 --有效
            AND ML.IS_GROUP_AVAILABLE = 1 --是否可以分组
            AND ML.IS_UPLOAD_DATE >= ?p_begin_date
            AND ML.IS_UPLOAD_DATE &lt; ?p_end_date
            AND L.BILLDATE >= ?beging_date
            AND L.BILLDATE &lt;?end_date;
            <!-- 向分组控制表中添加需处理的任务好(group_no)、分组状态(group_state)和分组类型(0日常分组1为月结分组) -->
            <script if="NUM>0">
                insert into td_drgs_controll(group_no,group_state,balance_flag) values (${etl.globals['group_no']},0,0);
                commit;
            </script>
        </query>

        <!-- 日常分组流程、上传主单批次选取 -->
        <query>
            SELECT
            L.HISID,
            L.PATIENT_SEX,
            CASE
            WHEN (L.ADMISSION_DATE - NVL(ML.NEWBORN_DATE, L.PATIENT_BIRTH)) &lt; 29 THEN
            '3'
            WHEN L.ADMISSION_DATE - NVL(ML.NEWBORN_DATE, L.PATIENT_BIRTH) >= 29 AND
            (MONTHS_BETWEEN(L.ADMISSION_DATE,
            NVL(ML.NEWBORN_DATE, L.PATIENT_BIRTH)) / 12) &lt; 1 THEN
            '2'
            WHEN (MONTHS_BETWEEN(L.ADMISSION_DATE,
            NVL(ML.NEWBORN_DATE, L.PATIENT_BIRTH)) / 12) >= 1 AND
            (MONTHS_BETWEEN(L.ADMISSION_DATE,
            NVL(ML.NEWBORN_DATE, L.PATIENT_BIRTH)) / 12) &lt; 17 THEN
            '1'
            ELSE
            '0'
            END AS AGETYPE, --参保人年龄类型
            CASE
            WHEN NVL(ML.NEWBORN_WEIGHT, L.PATIENT_WEIGHT * 1000) &lt; 1500 THEN
            '1'
            WHEN NVL(ML.NEWBORN_WEIGHT, L.PATIENT_WEIGHT * 1000) BETWEEN 1500 AND 2499 THEN
            '2'
            WHEN NVL(ML.NEWBORN_WEIGHT, L.PATIENT_WEIGHT * 1000) > 2499 THEN
            '3'
            ELSE
            '3'
            END AS LOADWEIGHTTYPE, --体重类型
            1 LOADFLAG,
            ML.IS_UPLOAD_DATE,
            L.BILLDATE,
            SYSDATE GROUP_DATE,
            L.LONGTERM
            FROM COMM.TD_SM_BILL_SS L
            INNER JOIN COMM.TD_MR_MEDICAL ML
            ON L.ADMISSION_NUMBER = ML.ADMISSION_NO
            AND L.HOSPITAL_ID = ML.HOSPTIAL_ID
            WHERE L.UNUSUAL_FLAG = '0'
            AND ML.IS_UPLOAD = 1 --已上传数据
            AND ML.IS_VALID = 0 --有效
            AND ML.IS_GROUP_AVAILABLE = 1 --是否可以分组
            AND ML.IS_UPLOAD_DATE >= ?p_begin_date
            AND ML.IS_UPLOAD_DATE &lt; ?p_end_date
            AND L.BILLDATE >= ?beging_date
            AND L.BILLDATE &lt;?end_date;

            <script>
                insert into td_drgs_in_hospital
                (GROUP_NO,
                HISID,
                PATIENT_SEX,
                AGE_TYPE,
                WEIGHT_TYPE,
                LOAD_FLAG,
                UPLOAD_DATE,
                BILL_DATE,
                GROUP_DATE,
                LONGTERM)
                values
                (${etl.globals['group_no']},
                ?HISID,
                ?PATIENT_SEX,
                ?AGETYPE,
                ?LOADWEIGHTTYPE,
                ?LOADFLAG,
                ?IS_UPLOAD_DATE,
                ?BILLDATE,
                ?GROUP_DATE,
                ?LONGTERM);
            </script>

        </query>

        <!-- 日常分组流程、诊断信息准备 -->
        <query>
            select DISTINCT hisid,
            mg.normal_code disease_id,
            DECODE(disease, ICD10, 1, 0) AS FLAG
            from (SELECT hos.hisid,
            L.DISCHARGE_DISEASE_ID ICD10,
            l.DISCHARGE_DISEASE_ID,
            l.DIAGNOSIS_CODE1,
            l.DIAGNOSIS_CODE2,
            L.DIAGNOSIS_CODE3,
            L.DIAGNOSIS_CODE4,
            L.DIAGNOSIS_CODE5,
            L.DIAGNOSIS_CODE6,
            L.DIAGNOSIS_CODE7,
            L.DIAGNOSIS_CODE8,
            L.DIAGNOSIS_CODE9,
            L.DIAGNOSIS_CODE10,
            L.DIAGNOSIS_CODE11,
            L.DIAGNOSIS_CODE12,
            L.DIAGNOSIS_CODE13,
            L.DIAGNOSIS_CODE14,
            L.DIAGNOSIS_CODE15,
            L.DIAGNOSIS_CODE16
            FROM TD_DRGS_IN_HOSPITAL HOS
            INNER JOIN COMM.TD_SM_BILL_SS SS
            ON HOS.HISID = SS.HISID
            INNER JOIN COMM.TD_MR_MEDICAL L
            ON SS.ADMISSION_NUMBER = L.ADMISSION_NO
            AND SS.HOSPITAL_ID = L.HOSPTIAL_ID
            AND L.IS_UPLOAD = 1
            AND L.IS_VALID = 0
            AND L.IS_GROUP_AVAILABLE = 1
            WHERE HOS.GROUP_NO = ${etl.globals['group_no']}) unpivot(disease for disease_name in(DISCHARGE_DISEASE_ID,
            DIAGNOSIS_CODE1,
            DIAGNOSIS_CODE2,
            DIAGNOSIS_CODE3,
            DIAGNOSIS_CODE4,
            DIAGNOSIS_CODE5,
            DIAGNOSIS_CODE6,
            DIAGNOSIS_CODE7,
            DIAGNOSIS_CODE8,
            DIAGNOSIS_CODE9,
            DIAGNOSIS_CODE10,
            DIAGNOSIS_CODE11,
            DIAGNOSIS_CODE12,
            DIAGNOSIS_CODE13,
            DIAGNOSIS_CODE14,
            DIAGNOSIS_CODE15,
            DIAGNOSIS_CODE16)) A
            left join COMM.TB_DISEASE_MAPPING MG
            ON A.disease = MG.CLIENT_CODE
            where mg.normal_code is not null;
            <script>
                insert into td_drgs_disease
                (group_no,
                hisid,
                disease_id,
                flag)
                values
                (${etl.globals['group_no']},
                ?HISID,
                ?disease_id,
                ?flag);
            </script>
        </query>

        <!-- 日常分组流程、手术信息准备 -->
        <query>
            SELECT
            SS.HISID,
            OPERATION_CODE icd9,
            IS_MAJOR_IDEN FLAG,
            '0' COSTS,
            '' ITEM_DATE
            FROM TD_DRGS_IN_HOSPITAL HOS
            INNER JOIN COMM.TD_SM_BILL_SS SS
            ON HOS.HISID = SS.HISID
            INNER JOIN COMM.TD_MR_MEDICAL L
            ON SS.HOSPITAL_ID = L.HOSPTIAL_ID
            AND SS.ADMISSION_NUMBER = L.ADMISSION_NO
            INNER JOIN COMM.TD_MR_OPERATION N --手术信息表
            ON L.ID = N.MEDICAL_ID
            INNER JOIN COMM.TD_MR_OPERATIONDETAIL O --手术明细表
            ON N.ID = O.OPERATION_ID
            WHERE L.IS_UPLOAD = 1 --已上传数据
            AND L.IS_VALID = 0 --有效
            AND L.IS_GROUP_AVAILABLE = 1 --是否可以分组
            AND HOS.GROUP_NO = ${etl.globals['group_no']};
            <script>
                insert into td_drgs_operation
                (group_no,
                hisid,
                icd9,
                flag,
                costs,
                item_date)
                values(
                ${etl.globals['group_no']},
                ?HISID,
                ?icd9,
                ?flag,
                ?costs,
                ?item_date);
            </script>
        </query>

        <!-- 日常分组流程、呼吸机明细项目准备 -->
        <query>
            SELECT  HISID, STD_CODE,'MCC' as DESCRIPTION
            FROM (SELECT /*+ parallel(4) */ DISTINCT HOS.HISID,
            UPPER(DD.STD_CODE) AS STD_CODE,
            SUM(D.COSTS) OVER(PARTITION BY HOS.HISID, DD.STD_CODE ORDER BY 1) AS SUM_ITEM_COSTS
            FROM TD_DRGS_IN_HOSPITAL    HOS,
            COMM.TD_SM_BILLDETAIL_SS  D,
            COMM.TB_STDCODEMAPPING DD
            WHERE HOS.HISID = D.PID
            AND D.ITEM_ID = DD.CLIENT_CODE
            AND HOS.GROUP_NO = ${etl.globals['group_no']}
            AND D.BILLDATE >= ?beging_date
            AND D.BILLDATE &lt;?end_date) A
            WHERE A.SUM_ITEM_COSTS > 0
            AND EXISTS (SELECT NULL
            FROM TB_HBZ_CHARGE_MCC T
            WHERE A.STD_CODE = UPPER(T.STD_CODE));
            <script>
                insert into td_drgs_item
                (group_no,
                hisid,
                std_code,
                DESCRIPTION)
                values
                (${etl.globals['group_no']},
                ?hisid,
                ?std_code,
                ?DESCRIPTION);
            </script>
        </query>

        <!-- 日常分组流程、其他因素明细项目准备 -->
        <query>
            SELECT  HISID, STD_CODE,'FACTOR_ITEM_ID' as DESCRIPTION
            FROM (SELECT /*+ parallel(4) */ DISTINCT HOS.HISID,
            UPPER(DD.STD_CODE) AS STD_CODE,
            SUM(D.COSTS) OVER(PARTITION BY HOS.HISID, DD.STD_CODE ORDER BY 1) AS SUM_ITEM_COSTS
            FROM TD_DRGS_IN_HOSPITAL    HOS,
            COMM.TD_SM_BILLDETAIL_SS  D,
            COMM.TB_STDCODEMAPPING DD
            WHERE HOS.HISID = D.PID
            AND D.ITEM_ID = DD.CLIENT_CODE
            AND HOS.GROUP_NO = ${etl.globals['group_no']}
            AND D.BILLDATE >= ?beging_date
            AND D.BILLDATE &lt;?end_date) A
            WHERE A.SUM_ITEM_COSTS > 0
            AND EXISTS (SELECT NULL
            FROM TB_OTHER_FACTOR T
            WHERE A.STD_CODE = UPPER(T.FACTOR_ITEM_ID));
            <script>
                insert into td_drgs_item
                (group_no,
                hisid,
                std_code,
                DESCRIPTION)
                values
                (${etl.globals['group_no']},
                ?hisid,
                ?std_code,
                ?DESCRIPTION);
            </script>
        </query>
    </query>

</etl>